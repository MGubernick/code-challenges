- Six commands commonly used to manage data stored in a relational database and how to set constraints on such data. What can we generalize so far?

- SQL is a programming language designed to manipulate and manage data stored in relational databases.

- A relational database is a database that organizes information into one or more tables.

- A table is a collection of data organized into rows and columns.

- A statement is a string of characters that the database recognizes as a valid command.
---------------------------------------------------------------------------------------------------------------------
CREATE TABLE creates a new table.
INSERT INTO adds a new row to a table.
SELECT queries data from a table.
ALTER TABLE changes an existing table.
UPDATE edits a row in a table.
DELETE FROM deletes rows from a table.

 - Constraints add information about how a column can be used.
 ---------------------------------------------------------------------------------------------------------------------
 Comparison operators used with the WHERE clause are:

= equal to
!= not equal to
> greater than
< less than
>= greater than or equal to
<= less than or equal to

---------------------------------------------------------------------------------------------------------------------
LIKE is a special operator used with the WHERE clause to search for a specific pattern in a column.

name LIKE 'Se_en' is a condition evaluating the name column for a specific pattern.

Se_en represents a pattern with a wildcard character.

The _ means you can substitute any individual character here without breaking the pattern. The names Seven and Se7en both match this pattern.

---------------------------------------------------------------------------------------------------------------------
The percentage sign % is another wildcard character that can be used with LIKE.

This statement below filters the result set to only include movies with names that begin with the letter ‘A’:

```sql
SELECT * 
FROM movies
WHERE name LIKE 'A%';
```

% is a wildcard character that matches zero or more missing letters in the pattern. For example:

A% matches all movies with names that begin with letter ‘A’
%a matches all movies that end with ‘a’
We can also use % both before and after a pattern:

SELECT * 
FROM movies 
WHERE name LIKE '%man%';
Here, any movie that contains the word ‘man’ in its name will be returned in the result.

LIKE is not case sensitive. ‘Batman’ and ‘Man of Steel’ will both appear in the result of the query above.

---------------------------------------------------------------------------------------------------------------------

- SELECT is the clause we use every time we want to query information from a database.
- AS renames a column or table.
- DISTINCT return unique values.
- WHERE is a popular command that lets you filter the results of the query based on conditions that you specify.
- LIKE and BETWEEN are special operators.
- AND and OR combines multiple conditions.
- ORDER BY sorts the result.
- LIMIT specifies the maximum number of rows that the query will return.
- CASE creates different outputs.

---------------------------------------------------------------------------------------------------------------------

- COUNT(): count the number of rows

- SUM(): the sum of the values in a column

- MAX()/MIN(): the largest/smallest value

- AVG(): the average of the values in a column

- ROUND(): round the values in the column

- Aggregate functions combine multiple rows together to form a single value of more meaningful information.

- GROUP BY is a clause used with aggregate functions to combine data from one or more columns.
HAVING limit the results of a query based on an aggregate property.

---------------------------------------------------------------------------------------------------------------------

- When we perform a simple JOIN (often called an inner join) our result only includes rows that match our ON condition

- A left join will keep all rows from the first table, regardless of whether there is a matching row in the second table.

- JOIN will combine rows from different tables if the join condition is true.

- LEFT JOIN will return every row in the left table, and if the join condition is not met, NULL values are used to fill in the columns from the right table.

- Primary key is a column that serves a unique identifier for the rows in the table.

- Foreign key is a column that contains the primary key to another table.

- CROSS JOIN lets us combine all rows of one table with all rows of another table.

- UNION stacks one dataset on top of another.

- WITH allows us to define one or more temporary tables that can be used in the final query.